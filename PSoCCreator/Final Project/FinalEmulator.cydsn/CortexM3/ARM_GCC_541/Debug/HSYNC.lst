ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"HSYNC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HSYNC_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	HSYNC_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	HSYNC_Enable, %function
  25              	HSYNC_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\HSYNC.c"
   1:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/HSYNC.c **** * File Name: HSYNC.c
   3:Generated_Source\PSoC5/HSYNC.c **** * Version 3.30
   4:Generated_Source\PSoC5/HSYNC.c **** *
   5:Generated_Source\PSoC5/HSYNC.c **** * Description:
   6:Generated_Source\PSoC5/HSYNC.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/HSYNC.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/HSYNC.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/HSYNC.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/HSYNC.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/HSYNC.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/HSYNC.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/HSYNC.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/HSYNC.c **** *
  15:Generated_Source\PSoC5/HSYNC.c **** * Note:
  16:Generated_Source\PSoC5/HSYNC.c **** *
  17:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************
  18:Generated_Source\PSoC5/HSYNC.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/HSYNC.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/HSYNC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/HSYNC.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/HSYNC.c **** 
  24:Generated_Source\PSoC5/HSYNC.c **** #include "HSYNC.h"
  25:Generated_Source\PSoC5/HSYNC.c **** 
  26:Generated_Source\PSoC5/HSYNC.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/HSYNC.c **** #ifdef HSYNC_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/HSYNC.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/HSYNC.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/HSYNC.c **** #endif /* HSYNC_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 2


  31:Generated_Source\PSoC5/HSYNC.c **** 
  32:Generated_Source\PSoC5/HSYNC.c **** uint8 HSYNC_initVar = 0u;
  33:Generated_Source\PSoC5/HSYNC.c **** 
  34:Generated_Source\PSoC5/HSYNC.c **** 
  35:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_Start
  37:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
  38:Generated_Source\PSoC5/HSYNC.c **** *
  39:Generated_Source\PSoC5/HSYNC.c **** * Summary:
  40:Generated_Source\PSoC5/HSYNC.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/HSYNC.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/HSYNC.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/HSYNC.c **** *
  44:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
  45:Generated_Source\PSoC5/HSYNC.c **** *  None
  46:Generated_Source\PSoC5/HSYNC.c **** *
  47:Generated_Source\PSoC5/HSYNC.c **** * Return:
  48:Generated_Source\PSoC5/HSYNC.c **** *  None
  49:Generated_Source\PSoC5/HSYNC.c **** *
  50:Generated_Source\PSoC5/HSYNC.c **** * Global variables:
  51:Generated_Source\PSoC5/HSYNC.c **** *  HSYNC_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/HSYNC.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/HSYNC.c **** *
  54:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/HSYNC.c **** void HSYNC_Start(void) 
  56:Generated_Source\PSoC5/HSYNC.c **** {
  57:Generated_Source\PSoC5/HSYNC.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/HSYNC.c ****     if(HSYNC_initVar == 0u)
  59:Generated_Source\PSoC5/HSYNC.c ****     {
  60:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_Init();
  61:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_initVar = 1u;
  62:Generated_Source\PSoC5/HSYNC.c ****     }
  63:Generated_Source\PSoC5/HSYNC.c ****     HSYNC_Enable();
  64:Generated_Source\PSoC5/HSYNC.c **** 
  65:Generated_Source\PSoC5/HSYNC.c **** }
  66:Generated_Source\PSoC5/HSYNC.c **** 
  67:Generated_Source\PSoC5/HSYNC.c **** 
  68:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_Init
  70:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
  71:Generated_Source\PSoC5/HSYNC.c **** *
  72:Generated_Source\PSoC5/HSYNC.c **** * Summary:
  73:Generated_Source\PSoC5/HSYNC.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/HSYNC.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/HSYNC.c **** *  HSYNC_Start().
  76:Generated_Source\PSoC5/HSYNC.c **** *
  77:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
  78:Generated_Source\PSoC5/HSYNC.c **** *  None
  79:Generated_Source\PSoC5/HSYNC.c **** *
  80:Generated_Source\PSoC5/HSYNC.c **** * Return:
  81:Generated_Source\PSoC5/HSYNC.c **** *  None
  82:Generated_Source\PSoC5/HSYNC.c **** *
  83:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/HSYNC.c **** void HSYNC_Init(void) 
  85:Generated_Source\PSoC5/HSYNC.c **** {
  86:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction || HSYNC_UseControl)
  87:Generated_Source\PSoC5/HSYNC.c ****         uint8 ctrl;
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 3


  88:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction || HSYNC_UseControl) */
  89:Generated_Source\PSoC5/HSYNC.c **** 
  90:Generated_Source\PSoC5/HSYNC.c ****     #if(!HSYNC_UsingFixedFunction)
  91:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UseStatus)
  92:Generated_Source\PSoC5/HSYNC.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/HSYNC.c ****             uint8 HSYNC_interruptState;
  94:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UseStatus) */
  95:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (!HSYNC_UsingFixedFunction) */
  96:Generated_Source\PSoC5/HSYNC.c **** 
  97:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction)
  98:Generated_Source\PSoC5/HSYNC.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL |= HSYNC_CFG0_MODE;
 100:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_DeadBand2_4)
 101:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_CONTROL |= HSYNC_CFG0_DB;
 102:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_DeadBand2_4) */
 103:Generated_Source\PSoC5/HSYNC.c **** 
 104:Generated_Source\PSoC5/HSYNC.c ****         ctrl = HSYNC_CONTROL3 & ((uint8 )(~HSYNC_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL3 = ctrl | HSYNC_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/HSYNC.c **** 
 107:Generated_Source\PSoC5/HSYNC.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_RT1 &= ((uint8)(~HSYNC_RT1_MASK));
 109:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_RT1 |= HSYNC_SYNC;
 110:Generated_Source\PSoC5/HSYNC.c **** 
 111:Generated_Source\PSoC5/HSYNC.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_RT1 &= ((uint8)(~HSYNC_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_RT1 |= HSYNC_SYNCDSI_EN;
 114:Generated_Source\PSoC5/HSYNC.c **** 
 115:Generated_Source\PSoC5/HSYNC.c ****     #elif (HSYNC_UseControl)
 116:Generated_Source\PSoC5/HSYNC.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/HSYNC.c ****         ctrl = HSYNC_CONTROL & ((uint8)(~HSYNC_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/HSYNC.c ****                 ((uint8)(~HSYNC_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL = ctrl | HSYNC_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/HSYNC.c ****                                    HSYNC_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 122:Generated_Source\PSoC5/HSYNC.c **** 
 123:Generated_Source\PSoC5/HSYNC.c ****     #if (!HSYNC_UsingFixedFunction)
 124:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_Resolution == 8)
 125:Generated_Source\PSoC5/HSYNC.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_AUX_CONTROLDP0 |= (HSYNC_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/HSYNC.c ****         #else /* (HSYNC_Resolution == 16)*/
 128:Generated_Source\PSoC5/HSYNC.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_AUX_CONTROLDP0 |= (HSYNC_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_AUX_CONTROLDP1 |= (HSYNC_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_Resolution == 8) */
 132:Generated_Source\PSoC5/HSYNC.c **** 
 133:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_WriteCounter(HSYNC_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (!HSYNC_UsingFixedFunction) */
 135:Generated_Source\PSoC5/HSYNC.c **** 
 136:Generated_Source\PSoC5/HSYNC.c ****     HSYNC_WritePeriod(HSYNC_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/HSYNC.c **** 
 138:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_UseOneCompareMode)
 139:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_WriteCompare(HSYNC_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/HSYNC.c ****         #else
 141:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_WriteCompare1(HSYNC_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_WriteCompare2(HSYNC_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UseOneCompareMode) */
 144:Generated_Source\PSoC5/HSYNC.c **** 
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 4


 145:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_KillModeMinTime)
 146:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_WriteKillTime(HSYNC_MinimumKillTime);
 147:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_KillModeMinTime) */
 148:Generated_Source\PSoC5/HSYNC.c **** 
 149:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_DeadBandUsed)
 150:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_WriteDeadTime(HSYNC_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_DeadBandUsed) */
 152:Generated_Source\PSoC5/HSYNC.c **** 
 153:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UseStatus || HSYNC_UsingFixedFunction)
 154:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_SetInterruptMode(HSYNC_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UseStatus || HSYNC_UsingFixedFunction) */
 156:Generated_Source\PSoC5/HSYNC.c **** 
 157:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction)
 158:Generated_Source\PSoC5/HSYNC.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_GLOBAL_ENABLE |= HSYNC_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/HSYNC.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL2 |= HSYNC_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/HSYNC.c ****     #else
 163:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UseStatus)
 164:Generated_Source\PSoC5/HSYNC.c **** 
 165:Generated_Source\PSoC5/HSYNC.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/HSYNC.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/HSYNC.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_STATUS_AUX_CTRL |= HSYNC_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/HSYNC.c **** 
 171:Generated_Source\PSoC5/HSYNC.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/HSYNC.c ****             CyExitCriticalSection(HSYNC_interruptState);
 173:Generated_Source\PSoC5/HSYNC.c **** 
 174:Generated_Source\PSoC5/HSYNC.c ****             /* Clear the FIFO to enable the HSYNC_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/HSYNC.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_ClearFIFO();
 177:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UseStatus) */
 178:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 179:Generated_Source\PSoC5/HSYNC.c **** }
 180:Generated_Source\PSoC5/HSYNC.c **** 
 181:Generated_Source\PSoC5/HSYNC.c **** 
 182:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_Enable
 184:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
 185:Generated_Source\PSoC5/HSYNC.c **** *
 186:Generated_Source\PSoC5/HSYNC.c **** * Summary:
 187:Generated_Source\PSoC5/HSYNC.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/HSYNC.c **** *
 189:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
 190:Generated_Source\PSoC5/HSYNC.c **** *  None
 191:Generated_Source\PSoC5/HSYNC.c **** *
 192:Generated_Source\PSoC5/HSYNC.c **** * Return:
 193:Generated_Source\PSoC5/HSYNC.c **** *  None
 194:Generated_Source\PSoC5/HSYNC.c **** *
 195:Generated_Source\PSoC5/HSYNC.c **** * Side Effects:
 196:Generated_Source\PSoC5/HSYNC.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/HSYNC.c **** *
 198:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/HSYNC.c **** void HSYNC_Enable(void) 
 200:Generated_Source\PSoC5/HSYNC.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/HSYNC.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction)
 203:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_GLOBAL_ENABLE |= HSYNC_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_GLOBAL_STBY_ENABLE |= HSYNC_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 206:Generated_Source\PSoC5/HSYNC.c **** 
 207:Generated_Source\PSoC5/HSYNC.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UseControl || HSYNC_UsingFixedFunction)
 209:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL |= HSYNC_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7C640040 		.word	1073767548
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	HSYNC_Enable, .-HSYNC_Enable
  46              		.section	.text.HSYNC_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	HSYNC_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	HSYNC_Stop, %function
  52              	HSYNC_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UseControl || HSYNC_UsingFixedFunction) */
 211:Generated_Source\PSoC5/HSYNC.c **** }
 212:Generated_Source\PSoC5/HSYNC.c **** 
 213:Generated_Source\PSoC5/HSYNC.c **** 
 214:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_Stop
 216:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
 217:Generated_Source\PSoC5/HSYNC.c **** *
 218:Generated_Source\PSoC5/HSYNC.c **** * Summary:
 219:Generated_Source\PSoC5/HSYNC.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/HSYNC.c **** *  interrupts.
 221:Generated_Source\PSoC5/HSYNC.c **** *
 222:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
 223:Generated_Source\PSoC5/HSYNC.c **** *  None
 224:Generated_Source\PSoC5/HSYNC.c **** *
 225:Generated_Source\PSoC5/HSYNC.c **** * Return:
 226:Generated_Source\PSoC5/HSYNC.c **** *  None
 227:Generated_Source\PSoC5/HSYNC.c **** *
 228:Generated_Source\PSoC5/HSYNC.c **** * Side Effects:
 229:Generated_Source\PSoC5/HSYNC.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/HSYNC.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/HSYNC.c **** *
 232:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 6


 233:Generated_Source\PSoC5/HSYNC.c **** void HSYNC_Stop(void) 
 234:Generated_Source\PSoC5/HSYNC.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UseControl || HSYNC_UsingFixedFunction)
 236:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_CONTROL &= ((uint8)(~HSYNC_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7C640040 		.word	1073767548
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	HSYNC_Stop, .-HSYNC_Stop
  72              		.section	.text.HSYNC_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	HSYNC_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	HSYNC_WriteCounter, %function
  78              	HSYNC_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UseControl || HSYNC_UsingFixedFunction) */
 238:Generated_Source\PSoC5/HSYNC.c **** 
 239:Generated_Source\PSoC5/HSYNC.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction)
 241:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_GLOBAL_ENABLE &= ((uint8)(~HSYNC_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_GLOBAL_STBY_ENABLE &= ((uint8)(~HSYNC_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 244:Generated_Source\PSoC5/HSYNC.c **** }
 245:Generated_Source\PSoC5/HSYNC.c **** 
 246:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_UseOneCompareMode)
 247:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_CompareMode1SW)
 248:Generated_Source\PSoC5/HSYNC.c **** 
 249:Generated_Source\PSoC5/HSYNC.c **** 
 250:Generated_Source\PSoC5/HSYNC.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/HSYNC.c ****         * Function Name: HSYNC_SetCompareMode
 252:Generated_Source\PSoC5/HSYNC.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/HSYNC.c ****         *
 254:Generated_Source\PSoC5/HSYNC.c ****         * Summary:
 255:Generated_Source\PSoC5/HSYNC.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/HSYNC.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/HSYNC.c ****         *
 258:Generated_Source\PSoC5/HSYNC.c ****         * Parameters:
 259:Generated_Source\PSoC5/HSYNC.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/HSYNC.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/HSYNC.c ****         *
 262:Generated_Source\PSoC5/HSYNC.c ****         * Return:
 263:Generated_Source\PSoC5/HSYNC.c ****         *  None
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 7


 264:Generated_Source\PSoC5/HSYNC.c ****         *
 265:Generated_Source\PSoC5/HSYNC.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/HSYNC.c ****         void HSYNC_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/HSYNC.c ****         {
 268:Generated_Source\PSoC5/HSYNC.c ****             #if(HSYNC_UsingFixedFunction)
 269:Generated_Source\PSoC5/HSYNC.c **** 
 270:Generated_Source\PSoC5/HSYNC.c ****                 #if(0 != HSYNC_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << HSYNC_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/HSYNC.c ****                 #else
 273:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/HSYNC.c ****                 #endif /* (0 != HSYNC_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/HSYNC.c **** 
 276:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL3 &= ((uint8)(~HSYNC_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/HSYNC.c **** 
 279:Generated_Source\PSoC5/HSYNC.c ****             #elif (HSYNC_UseControl)
 280:Generated_Source\PSoC5/HSYNC.c **** 
 281:Generated_Source\PSoC5/HSYNC.c ****                 #if(0 != HSYNC_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << HSYNC_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/HSYNC.c ****                                                 HSYNC_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/HSYNC.c ****                 #else
 285:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemode1masked = comparemode & HSYNC_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/HSYNC.c ****                 #endif /* (0 != HSYNC_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/HSYNC.c **** 
 288:Generated_Source\PSoC5/HSYNC.c ****                 #if(0 != HSYNC_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << HSYNC_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/HSYNC.c ****                                                HSYNC_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/HSYNC.c ****                 #else
 292:Generated_Source\PSoC5/HSYNC.c ****                     uint8 comparemode2masked = comparemode & HSYNC_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/HSYNC.c ****                 #endif /* (0 != HSYNC_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/HSYNC.c **** 
 295:Generated_Source\PSoC5/HSYNC.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL &= ((uint8)(~(HSYNC_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/HSYNC.c ****                                             HSYNC_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/HSYNC.c **** 
 300:Generated_Source\PSoC5/HSYNC.c ****             #else
 301:Generated_Source\PSoC5/HSYNC.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (HSYNC_UsingFixedFunction) */
 303:Generated_Source\PSoC5/HSYNC.c ****         }
 304:Generated_Source\PSoC5/HSYNC.c ****     #endif /* HSYNC_CompareMode1SW */
 305:Generated_Source\PSoC5/HSYNC.c **** 
 306:Generated_Source\PSoC5/HSYNC.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/HSYNC.c **** 
 308:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_CompareMode1SW)
 309:Generated_Source\PSoC5/HSYNC.c **** 
 310:Generated_Source\PSoC5/HSYNC.c **** 
 311:Generated_Source\PSoC5/HSYNC.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/HSYNC.c ****         * Function Name: HSYNC_SetCompareMode1
 313:Generated_Source\PSoC5/HSYNC.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/HSYNC.c ****         *
 315:Generated_Source\PSoC5/HSYNC.c ****         * Summary:
 316:Generated_Source\PSoC5/HSYNC.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/HSYNC.c ****         *
 318:Generated_Source\PSoC5/HSYNC.c ****         * Parameters:
 319:Generated_Source\PSoC5/HSYNC.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/HSYNC.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 8


 321:Generated_Source\PSoC5/HSYNC.c ****         *
 322:Generated_Source\PSoC5/HSYNC.c ****         * Return:
 323:Generated_Source\PSoC5/HSYNC.c ****         *  None
 324:Generated_Source\PSoC5/HSYNC.c ****         *
 325:Generated_Source\PSoC5/HSYNC.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/HSYNC.c ****         void HSYNC_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/HSYNC.c ****         {
 328:Generated_Source\PSoC5/HSYNC.c ****             #if(0 != HSYNC_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/HSYNC.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << HSYNC_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/HSYNC.c ****                                            HSYNC_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/HSYNC.c ****             #else
 332:Generated_Source\PSoC5/HSYNC.c ****                 uint8 comparemodemasked = comparemode & HSYNC_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (0 != HSYNC_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/HSYNC.c **** 
 335:Generated_Source\PSoC5/HSYNC.c ****             #if (HSYNC_UseControl)
 336:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL &= ((uint8)(~HSYNC_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (HSYNC_UseControl) */
 339:Generated_Source\PSoC5/HSYNC.c ****         }
 340:Generated_Source\PSoC5/HSYNC.c ****     #endif /* HSYNC_CompareMode1SW */
 341:Generated_Source\PSoC5/HSYNC.c **** 
 342:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_CompareMode2SW)
 343:Generated_Source\PSoC5/HSYNC.c **** 
 344:Generated_Source\PSoC5/HSYNC.c **** 
 345:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_SetCompareMode2
 347:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/HSYNC.c ****     *
 349:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 350:Generated_Source\PSoC5/HSYNC.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/HSYNC.c ****     *
 352:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 353:Generated_Source\PSoC5/HSYNC.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/HSYNC.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/HSYNC.c ****     *
 356:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 357:Generated_Source\PSoC5/HSYNC.c ****     *  None
 358:Generated_Source\PSoC5/HSYNC.c ****     *
 359:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/HSYNC.c ****     {
 362:Generated_Source\PSoC5/HSYNC.c **** 
 363:Generated_Source\PSoC5/HSYNC.c ****         #if(0 != HSYNC_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/HSYNC.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << HSYNC_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/HSYNC.c ****                                                  HSYNC_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/HSYNC.c ****         #else
 367:Generated_Source\PSoC5/HSYNC.c ****             uint8 comparemodemasked = comparemode & HSYNC_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (0 != HSYNC_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/HSYNC.c **** 
 370:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_UseControl)
 371:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_CONTROL &= ((uint8)(~HSYNC_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UseControl) */
 374:Generated_Source\PSoC5/HSYNC.c ****     }
 375:Generated_Source\PSoC5/HSYNC.c ****     #endif /*HSYNC_CompareMode2SW */
 376:Generated_Source\PSoC5/HSYNC.c **** 
 377:Generated_Source\PSoC5/HSYNC.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 9


 378:Generated_Source\PSoC5/HSYNC.c **** 
 379:Generated_Source\PSoC5/HSYNC.c **** 
 380:Generated_Source\PSoC5/HSYNC.c **** #if (!HSYNC_UsingFixedFunction)
 381:Generated_Source\PSoC5/HSYNC.c **** 
 382:Generated_Source\PSoC5/HSYNC.c **** 
 383:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteCounter
 385:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/HSYNC.c ****     *
 387:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 388:Generated_Source\PSoC5/HSYNC.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/HSYNC.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/HSYNC.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/HSYNC.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/HSYNC.c ****     *
 393:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 394:Generated_Source\PSoC5/HSYNC.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/HSYNC.c ****     *
 396:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 397:Generated_Source\PSoC5/HSYNC.c ****     *  None
 398:Generated_Source\PSoC5/HSYNC.c ****     *
 399:Generated_Source\PSoC5/HSYNC.c ****     * Side Effects:
 400:Generated_Source\PSoC5/HSYNC.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/HSYNC.c ****     *
 402:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/HSYNC.c ****                                        
 405:Generated_Source\PSoC5/HSYNC.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/HSYNC.c ****         CY_SET_REG8(HSYNC_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 0F640040 		.word	1073767439
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	HSYNC_WriteCounter, .-HSYNC_WriteCounter
  97              		.section	.text.HSYNC_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	HSYNC_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	HSYNC_ReadCounter, %function
 103              	HSYNC_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/HSYNC.c ****     }
 408:Generated_Source\PSoC5/HSYNC.c **** 
 409:Generated_Source\PSoC5/HSYNC.c **** 
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 10


 410:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadCounter
 412:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/HSYNC.c ****     *
 414:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 415:Generated_Source\PSoC5/HSYNC.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/HSYNC.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/HSYNC.c ****     *
 418:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 419:Generated_Source\PSoC5/HSYNC.c ****     *  None
 420:Generated_Source\PSoC5/HSYNC.c ****     *
 421:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 422:Generated_Source\PSoC5/HSYNC.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/HSYNC.c ****     *
 424:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadCounter(void) 
 426:Generated_Source\PSoC5/HSYNC.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/HSYNC.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/HSYNC.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/HSYNC.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/HSYNC.c ****           (void)CY_GET_REG8(HSYNC_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/HSYNC.c **** 
 432:Generated_Source\PSoC5/HSYNC.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/HSYNC.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 1F640040 		.word	1073767455
 122 0010 5F640040 		.word	1073767519
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	HSYNC_ReadCounter, .-HSYNC_ReadCounter
 126              		.section	.text.HSYNC_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	HSYNC_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	HSYNC_WritePeriod, %function
 132              	HSYNC_WritePeriod:
 133              	.LFB6:
 435:Generated_Source\PSoC5/HSYNC.c **** 
 436:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UseStatus)
 437:Generated_Source\PSoC5/HSYNC.c **** 
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 11


 438:Generated_Source\PSoC5/HSYNC.c **** 
 439:Generated_Source\PSoC5/HSYNC.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/HSYNC.c ****         * Function Name: HSYNC_ClearFIFO
 441:Generated_Source\PSoC5/HSYNC.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/HSYNC.c ****         *
 443:Generated_Source\PSoC5/HSYNC.c ****         * Summary:
 444:Generated_Source\PSoC5/HSYNC.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/HSYNC.c ****         *
 446:Generated_Source\PSoC5/HSYNC.c ****         * Parameters:
 447:Generated_Source\PSoC5/HSYNC.c ****         *  None
 448:Generated_Source\PSoC5/HSYNC.c ****         *
 449:Generated_Source\PSoC5/HSYNC.c ****         * Return:
 450:Generated_Source\PSoC5/HSYNC.c ****         *  None
 451:Generated_Source\PSoC5/HSYNC.c ****         *
 452:Generated_Source\PSoC5/HSYNC.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/HSYNC.c ****         void HSYNC_ClearFIFO(void) 
 454:Generated_Source\PSoC5/HSYNC.c ****         {
 455:Generated_Source\PSoC5/HSYNC.c ****             while(0u != (HSYNC_ReadStatusRegister() & HSYNC_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/HSYNC.c ****             {
 457:Generated_Source\PSoC5/HSYNC.c ****                 (void)HSYNC_ReadCapture();
 458:Generated_Source\PSoC5/HSYNC.c ****             }
 459:Generated_Source\PSoC5/HSYNC.c ****         }
 460:Generated_Source\PSoC5/HSYNC.c **** 
 461:Generated_Source\PSoC5/HSYNC.c ****     #endif /* HSYNC_UseStatus */
 462:Generated_Source\PSoC5/HSYNC.c **** 
 463:Generated_Source\PSoC5/HSYNC.c **** #endif /* !HSYNC_UsingFixedFunction */
 464:Generated_Source\PSoC5/HSYNC.c **** 
 465:Generated_Source\PSoC5/HSYNC.c **** 
 466:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_WritePeriod
 468:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
 469:Generated_Source\PSoC5/HSYNC.c **** *
 470:Generated_Source\PSoC5/HSYNC.c **** * Summary:
 471:Generated_Source\PSoC5/HSYNC.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/HSYNC.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/HSYNC.c **** *
 474:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
 475:Generated_Source\PSoC5/HSYNC.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/HSYNC.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/HSYNC.c **** *
 478:Generated_Source\PSoC5/HSYNC.c **** * Return:
 479:Generated_Source\PSoC5/HSYNC.c **** *  None
 480:Generated_Source\PSoC5/HSYNC.c **** *
 481:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/HSYNC.c **** void HSYNC_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/HSYNC.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/HSYNC.c ****     #if(HSYNC_UsingFixedFunction)
 485:Generated_Source\PSoC5/HSYNC.c ****         CY_SET_REG16(HSYNC_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/HSYNC.c ****     #else
 487:Generated_Source\PSoC5/HSYNC.c ****         CY_SET_REG8(HSYNC_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 4F640040 		.word	1073767503
 148              		.cfi_endproc
 149              	.LFE6:
 150              		.size	HSYNC_WritePeriod, .-HSYNC_WritePeriod
 151              		.section	.text.HSYNC_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	HSYNC_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	HSYNC_WriteCompare, %function
 157              	HSYNC_WriteCompare:
 158              	.LFB7:
 488:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 489:Generated_Source\PSoC5/HSYNC.c **** }
 490:Generated_Source\PSoC5/HSYNC.c **** 
 491:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_UseOneCompareMode)
 492:Generated_Source\PSoC5/HSYNC.c **** 
 493:Generated_Source\PSoC5/HSYNC.c **** 
 494:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteCompare
 496:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/HSYNC.c ****     *
 498:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 499:Generated_Source\PSoC5/HSYNC.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/HSYNC.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/HSYNC.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/HSYNC.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/HSYNC.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/HSYNC.c ****     *
 505:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 506:Generated_Source\PSoC5/HSYNC.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/HSYNC.c ****     *
 508:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 509:Generated_Source\PSoC5/HSYNC.c ****     *  None
 510:Generated_Source\PSoC5/HSYNC.c ****     *
 511:Generated_Source\PSoC5/HSYNC.c ****     * Side Effects:
 512:Generated_Source\PSoC5/HSYNC.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/HSYNC.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/HSYNC.c ****     *
 515:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/HSYNC.c ****                                        
 518:Generated_Source\PSoC5/HSYNC.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UsingFixedFunction)
 520:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG16(HSYNC_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 13


 521:Generated_Source\PSoC5/HSYNC.c ****         #else
 522:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG8(HSYNC_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 2F640040 		.word	1073767471
 173              		.cfi_endproc
 174              	.LFE7:
 175              		.size	HSYNC_WriteCompare, .-HSYNC_WriteCompare
 176              		.section	.text.HSYNC_Init,"ax",%progbits
 177              		.align	2
 178              		.global	HSYNC_Init
 179              		.thumb
 180              		.thumb_func
 181              		.type	HSYNC_Init, %function
 182              	HSYNC_Init:
 183              	.LFB1:
  85:Generated_Source\PSoC5/HSYNC.c ****     #if (HSYNC_UsingFixedFunction || HSYNC_UseControl)
 184              		.loc 1 85 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/HSYNC.c ****                 ((uint8)(~HSYNC_CTRL_CMPMODE1_MASK));
 192              		.loc 1 117 0
 193 0002 0B4A     		ldr	r2, .L21
 194 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 195 0006 03F0C003 		and	r3, r3, #192
 196              	.LVL3:
 119:Generated_Source\PSoC5/HSYNC.c ****                                    HSYNC_DEFAULT_COMPARE1_MODE;
 197              		.loc 1 119 0
 198 000a 43F00803 		orr	r3, r3, #8
 199              	.LVL4:
 200 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/HSYNC.c ****         #else /* (HSYNC_Resolution == 16)*/
 201              		.loc 1 126 0
 202 0010 2332     		adds	r2, r2, #35
 203 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 204 0014 43F00103 		orr	r3, r3, #1
 205 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (!HSYNC_UsingFixedFunction) */
 206              		.loc 1 133 0
 207 001a 1120     		movs	r0, #17
 208 001c FFF7FEFF 		bl	HSYNC_WriteCounter
 209              	.LVL5:
 136:Generated_Source\PSoC5/HSYNC.c **** 
 210              		.loc 1 136 0
 211 0020 1120     		movs	r0, #17
 212 0022 FFF7FEFF 		bl	HSYNC_WritePeriod
 213              	.LVL6:
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 14


 139:Generated_Source\PSoC5/HSYNC.c ****         #else
 214              		.loc 1 139 0
 215 0026 1120     		movs	r0, #17
 216 0028 FFF7FEFF 		bl	HSYNC_WriteCompare
 217              	.LVL7:
 218 002c 08BD     		pop	{r3, pc}
 219              	.L22:
 220 002e 00BF     		.align	2
 221              	.L21:
 222 0030 7C640040 		.word	1073767548
 223              		.cfi_endproc
 224              	.LFE1:
 225              		.size	HSYNC_Init, .-HSYNC_Init
 226              		.section	.text.HSYNC_Start,"ax",%progbits
 227              		.align	2
 228              		.global	HSYNC_Start
 229              		.thumb
 230              		.thumb_func
 231              		.type	HSYNC_Start, %function
 232              	HSYNC_Start:
 233              	.LFB0:
  56:Generated_Source\PSoC5/HSYNC.c ****     /* If not Initialized then initialize all required hardware and software */
 234              		.loc 1 56 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/HSYNC.c ****     {
 242              		.loc 1 58 0
 243 0002 054B     		ldr	r3, .L26
 244 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/HSYNC.c ****         HSYNC_initVar = 1u;
 246              		.loc 1 60 0
 247 0008 FFF7FEFF 		bl	HSYNC_Init
 248              	.LVL8:
  61:Generated_Source\PSoC5/HSYNC.c ****     }
 249              		.loc 1 61 0
 250 000c 0122     		movs	r2, #1
 251 000e 024B     		ldr	r3, .L26
 252 0010 1A70     		strb	r2, [r3]
 253              	.L24:
  63:Generated_Source\PSoC5/HSYNC.c **** 
 254              		.loc 1 63 0
 255 0012 FFF7FEFF 		bl	HSYNC_Enable
 256              	.LVL9:
 257 0016 08BD     		pop	{r3, pc}
 258              	.L27:
 259              		.align	2
 260              	.L26:
 261 0018 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE0:
 264              		.size	HSYNC_Start, .-HSYNC_Start
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 15


 265              		.section	.text.HSYNC_ReadControlRegister,"ax",%progbits
 266              		.align	2
 267              		.global	HSYNC_ReadControlRegister
 268              		.thumb
 269              		.thumb_func
 270              		.type	HSYNC_ReadControlRegister, %function
 271              	HSYNC_ReadControlRegister:
 272              	.LFB8:
 523:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UsingFixedFunction) */
 524:Generated_Source\PSoC5/HSYNC.c **** 
 525:Generated_Source\PSoC5/HSYNC.c ****         #if (HSYNC_PWMMode == HSYNC__B_PWM__DITHER)
 526:Generated_Source\PSoC5/HSYNC.c ****             #if(HSYNC_UsingFixedFunction)
 527:Generated_Source\PSoC5/HSYNC.c ****                 CY_SET_REG16(HSYNC_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/HSYNC.c ****             #else
 529:Generated_Source\PSoC5/HSYNC.c ****                 CY_SET_REG8(HSYNC_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (HSYNC_UsingFixedFunction) */
 531:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_PWMMode == HSYNC__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/HSYNC.c ****     }
 533:Generated_Source\PSoC5/HSYNC.c **** 
 534:Generated_Source\PSoC5/HSYNC.c **** 
 535:Generated_Source\PSoC5/HSYNC.c **** #else
 536:Generated_Source\PSoC5/HSYNC.c **** 
 537:Generated_Source\PSoC5/HSYNC.c **** 
 538:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteCompare1
 540:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/HSYNC.c ****     *
 542:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 543:Generated_Source\PSoC5/HSYNC.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/HSYNC.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/HSYNC.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/HSYNC.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/HSYNC.c ****     *
 548:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 549:Generated_Source\PSoC5/HSYNC.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/HSYNC.c ****     *
 551:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 552:Generated_Source\PSoC5/HSYNC.c ****     *  None
 553:Generated_Source\PSoC5/HSYNC.c ****     *
 554:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/HSYNC.c ****                                         
 557:Generated_Source\PSoC5/HSYNC.c ****     {
 558:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UsingFixedFunction)
 559:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG16(HSYNC_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/HSYNC.c ****         #else
 561:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG8(HSYNC_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UsingFixedFunction) */
 563:Generated_Source\PSoC5/HSYNC.c ****     }
 564:Generated_Source\PSoC5/HSYNC.c **** 
 565:Generated_Source\PSoC5/HSYNC.c **** 
 566:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteCompare2
 568:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/HSYNC.c ****     *
 570:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 571:Generated_Source\PSoC5/HSYNC.c ****     *  This funtion is used to change the compare value, for compare1 output.
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 16


 572:Generated_Source\PSoC5/HSYNC.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/HSYNC.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/HSYNC.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/HSYNC.c ****     *  mode.
 576:Generated_Source\PSoC5/HSYNC.c ****     *
 577:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 578:Generated_Source\PSoC5/HSYNC.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/HSYNC.c ****     *
 580:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 581:Generated_Source\PSoC5/HSYNC.c ****     *  None
 582:Generated_Source\PSoC5/HSYNC.c ****     *
 583:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/HSYNC.c ****                                         
 586:Generated_Source\PSoC5/HSYNC.c ****     {
 587:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UsingFixedFunction)
 588:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG16(HSYNC_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/HSYNC.c ****         #else
 590:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG8(HSYNC_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UsingFixedFunction) */
 592:Generated_Source\PSoC5/HSYNC.c ****     }
 593:Generated_Source\PSoC5/HSYNC.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/HSYNC.c **** 
 595:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_DeadBandUsed)
 596:Generated_Source\PSoC5/HSYNC.c **** 
 597:Generated_Source\PSoC5/HSYNC.c **** 
 598:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteDeadTime
 600:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/HSYNC.c ****     *
 602:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 603:Generated_Source\PSoC5/HSYNC.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/HSYNC.c ****     *
 605:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 606:Generated_Source\PSoC5/HSYNC.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/HSYNC.c ****     *
 608:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 609:Generated_Source\PSoC5/HSYNC.c ****     *  None
 610:Generated_Source\PSoC5/HSYNC.c ****     *
 611:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/HSYNC.c ****     {
 614:Generated_Source\PSoC5/HSYNC.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/HSYNC.c ****         #if(!HSYNC_DeadBand2_4)
 616:Generated_Source\PSoC5/HSYNC.c ****             CY_SET_REG8(HSYNC_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/HSYNC.c ****         #else
 618:Generated_Source\PSoC5/HSYNC.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/HSYNC.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/HSYNC.c ****             HSYNC_DEADBAND_COUNT &= ((uint8)(~HSYNC_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/HSYNC.c **** 
 622:Generated_Source\PSoC5/HSYNC.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/HSYNC.c ****             #if(HSYNC_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << HSYNC_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/HSYNC.c ****                                                     HSYNC_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/HSYNC.c ****             #else
 627:Generated_Source\PSoC5/HSYNC.c ****                 HSYNC_DEADBAND_COUNT |= deadtime & HSYNC_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (HSYNC_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 17


 629:Generated_Source\PSoC5/HSYNC.c **** 
 630:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (!HSYNC_DeadBand2_4) */
 631:Generated_Source\PSoC5/HSYNC.c ****     }
 632:Generated_Source\PSoC5/HSYNC.c **** 
 633:Generated_Source\PSoC5/HSYNC.c **** 
 634:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadDeadTime
 636:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/HSYNC.c ****     *
 638:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 639:Generated_Source\PSoC5/HSYNC.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/HSYNC.c ****     *
 641:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 642:Generated_Source\PSoC5/HSYNC.c ****     *  None
 643:Generated_Source\PSoC5/HSYNC.c ****     *
 644:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 645:Generated_Source\PSoC5/HSYNC.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/HSYNC.c ****     *
 647:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/HSYNC.c ****     {
 650:Generated_Source\PSoC5/HSYNC.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/HSYNC.c ****         #if(!HSYNC_DeadBand2_4)
 652:Generated_Source\PSoC5/HSYNC.c ****             return (CY_GET_REG8(HSYNC_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/HSYNC.c ****         #else
 654:Generated_Source\PSoC5/HSYNC.c **** 
 655:Generated_Source\PSoC5/HSYNC.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/HSYNC.c ****             #if(HSYNC_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/HSYNC.c ****                 return ((uint8)(((uint8)(HSYNC_DEADBAND_COUNT & HSYNC_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/HSYNC.c ****                                                                            HSYNC_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/HSYNC.c ****             #else
 660:Generated_Source\PSoC5/HSYNC.c ****                 return (HSYNC_DEADBAND_COUNT & HSYNC_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/HSYNC.c ****             #endif /* (HSYNC_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (!HSYNC_DeadBand2_4) */
 663:Generated_Source\PSoC5/HSYNC.c ****     }
 664:Generated_Source\PSoC5/HSYNC.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/HSYNC.c **** 
 666:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_UseStatus || HSYNC_UsingFixedFunction)
 667:Generated_Source\PSoC5/HSYNC.c **** 
 668:Generated_Source\PSoC5/HSYNC.c **** 
 669:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_SetInterruptMode
 671:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/HSYNC.c ****     *
 673:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 674:Generated_Source\PSoC5/HSYNC.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/HSYNC.c ****     *  source status register.
 676:Generated_Source\PSoC5/HSYNC.c ****     *
 677:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 678:Generated_Source\PSoC5/HSYNC.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/HSYNC.c ****     *
 680:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 681:Generated_Source\PSoC5/HSYNC.c ****     *  None
 682:Generated_Source\PSoC5/HSYNC.c ****     *
 683:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/HSYNC.c ****     {
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 18


 686:Generated_Source\PSoC5/HSYNC.c ****         CY_SET_REG8(HSYNC_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/HSYNC.c ****     }
 688:Generated_Source\PSoC5/HSYNC.c **** 
 689:Generated_Source\PSoC5/HSYNC.c **** 
 690:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadStatusRegister
 692:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/HSYNC.c ****     *
 694:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 695:Generated_Source\PSoC5/HSYNC.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/HSYNC.c ****     *
 697:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 698:Generated_Source\PSoC5/HSYNC.c ****     *  None
 699:Generated_Source\PSoC5/HSYNC.c ****     *
 700:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 701:Generated_Source\PSoC5/HSYNC.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/HSYNC.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/HSYNC.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/HSYNC.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/HSYNC.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/HSYNC.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/HSYNC.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/HSYNC.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/HSYNC.c ****     *
 710:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/HSYNC.c ****     {
 713:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_STATUS_PTR));
 714:Generated_Source\PSoC5/HSYNC.c ****     }
 715:Generated_Source\PSoC5/HSYNC.c **** 
 716:Generated_Source\PSoC5/HSYNC.c **** #endif /* (HSYNC_UseStatus || HSYNC_UsingFixedFunction) */
 717:Generated_Source\PSoC5/HSYNC.c **** 
 718:Generated_Source\PSoC5/HSYNC.c **** 
 719:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_UseControl)
 720:Generated_Source\PSoC5/HSYNC.c **** 
 721:Generated_Source\PSoC5/HSYNC.c **** 
 722:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadControlRegister
 724:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/HSYNC.c ****     *
 726:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 727:Generated_Source\PSoC5/HSYNC.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/HSYNC.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/HSYNC.c ****     *
 730:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 731:Generated_Source\PSoC5/HSYNC.c ****     *  None
 732:Generated_Source\PSoC5/HSYNC.c ****     *
 733:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 734:Generated_Source\PSoC5/HSYNC.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/HSYNC.c ****     *
 736:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/HSYNC.c ****     {
 273              		.loc 1 738 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 19


 277              		@ link register save eliminated.
 739:Generated_Source\PSoC5/HSYNC.c ****         uint8 result;
 740:Generated_Source\PSoC5/HSYNC.c **** 
 741:Generated_Source\PSoC5/HSYNC.c ****         result = CY_GET_REG8(HSYNC_CONTROL_PTR);
 278              		.loc 1 741 0
 279 0000 014B     		ldr	r3, .L29
 280 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 281              	.LVL10:
 742:Generated_Source\PSoC5/HSYNC.c ****         return (result);
 743:Generated_Source\PSoC5/HSYNC.c ****     }
 282              		.loc 1 743 0
 283 0004 7047     		bx	lr
 284              	.L30:
 285 0006 00BF     		.align	2
 286              	.L29:
 287 0008 7C640040 		.word	1073767548
 288              		.cfi_endproc
 289              	.LFE8:
 290              		.size	HSYNC_ReadControlRegister, .-HSYNC_ReadControlRegister
 291              		.section	.text.HSYNC_WriteControlRegister,"ax",%progbits
 292              		.align	2
 293              		.global	HSYNC_WriteControlRegister
 294              		.thumb
 295              		.thumb_func
 296              		.type	HSYNC_WriteControlRegister, %function
 297              	HSYNC_WriteControlRegister:
 298              	.LFB9:
 744:Generated_Source\PSoC5/HSYNC.c **** 
 745:Generated_Source\PSoC5/HSYNC.c **** 
 746:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_WriteControlRegister
 748:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/HSYNC.c ****     *
 750:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 751:Generated_Source\PSoC5/HSYNC.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/HSYNC.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/HSYNC.c ****     *
 754:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 755:Generated_Source\PSoC5/HSYNC.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/HSYNC.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/HSYNC.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/HSYNC.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/HSYNC.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/HSYNC.c ****     *
 761:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 762:Generated_Source\PSoC5/HSYNC.c ****     *  None
 763:Generated_Source\PSoC5/HSYNC.c ****     *
 764:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/HSYNC.c ****     void HSYNC_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/HSYNC.c ****     {
 299              		.loc 1 766 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              	.LVL11:
 767:Generated_Source\PSoC5/HSYNC.c ****         CY_SET_REG8(HSYNC_CONTROL_PTR, control);
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 20


 305              		.loc 1 767 0
 306 0000 014B     		ldr	r3, .L32
 307 0002 1870     		strb	r0, [r3]
 308 0004 7047     		bx	lr
 309              	.L33:
 310 0006 00BF     		.align	2
 311              	.L32:
 312 0008 7C640040 		.word	1073767548
 313              		.cfi_endproc
 314              	.LFE9:
 315              		.size	HSYNC_WriteControlRegister, .-HSYNC_WriteControlRegister
 316              		.section	.text.HSYNC_ReadCapture,"ax",%progbits
 317              		.align	2
 318              		.global	HSYNC_ReadCapture
 319              		.thumb
 320              		.thumb_func
 321              		.type	HSYNC_ReadCapture, %function
 322              	HSYNC_ReadCapture:
 323              	.LFB10:
 768:Generated_Source\PSoC5/HSYNC.c ****     }
 769:Generated_Source\PSoC5/HSYNC.c **** 
 770:Generated_Source\PSoC5/HSYNC.c **** #endif /* (HSYNC_UseControl) */
 771:Generated_Source\PSoC5/HSYNC.c **** 
 772:Generated_Source\PSoC5/HSYNC.c **** 
 773:Generated_Source\PSoC5/HSYNC.c **** #if (!HSYNC_UsingFixedFunction)
 774:Generated_Source\PSoC5/HSYNC.c **** 
 775:Generated_Source\PSoC5/HSYNC.c **** 
 776:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadCapture
 778:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/HSYNC.c ****     *
 780:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 781:Generated_Source\PSoC5/HSYNC.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/HSYNC.c ****     *
 783:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 784:Generated_Source\PSoC5/HSYNC.c ****     *  None
 785:Generated_Source\PSoC5/HSYNC.c ****     *
 786:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 787:Generated_Source\PSoC5/HSYNC.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/HSYNC.c ****     *
 789:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadCapture(void) 
 791:Generated_Source\PSoC5/HSYNC.c ****     {
 324              		.loc 1 791 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 792:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_CAPTURE_LSB_PTR));
 329              		.loc 1 792 0
 330 0000 014B     		ldr	r3, .L35
 331 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/HSYNC.c ****     }
 332              		.loc 1 793 0
 333 0004 7047     		bx	lr
 334              	.L36:
 335 0006 00BF     		.align	2
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 21


 336              	.L35:
 337 0008 5F640040 		.word	1073767519
 338              		.cfi_endproc
 339              	.LFE10:
 340              		.size	HSYNC_ReadCapture, .-HSYNC_ReadCapture
 341              		.section	.text.HSYNC_ReadCompare,"ax",%progbits
 342              		.align	2
 343              		.global	HSYNC_ReadCompare
 344              		.thumb
 345              		.thumb_func
 346              		.type	HSYNC_ReadCompare, %function
 347              	HSYNC_ReadCompare:
 348              	.LFB11:
 794:Generated_Source\PSoC5/HSYNC.c **** 
 795:Generated_Source\PSoC5/HSYNC.c **** #endif /* (!HSYNC_UsingFixedFunction) */
 796:Generated_Source\PSoC5/HSYNC.c **** 
 797:Generated_Source\PSoC5/HSYNC.c **** 
 798:Generated_Source\PSoC5/HSYNC.c **** #if (HSYNC_UseOneCompareMode)
 799:Generated_Source\PSoC5/HSYNC.c **** 
 800:Generated_Source\PSoC5/HSYNC.c **** 
 801:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadCompare
 803:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/HSYNC.c ****     *
 805:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 806:Generated_Source\PSoC5/HSYNC.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/HSYNC.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/HSYNC.c ****     *
 809:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 810:Generated_Source\PSoC5/HSYNC.c ****     *  None
 811:Generated_Source\PSoC5/HSYNC.c ****     *
 812:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 813:Generated_Source\PSoC5/HSYNC.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/HSYNC.c ****     *
 815:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadCompare(void) 
 817:Generated_Source\PSoC5/HSYNC.c ****     {
 349              		.loc 1 817 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 818:Generated_Source\PSoC5/HSYNC.c ****         #if(HSYNC_UsingFixedFunction)
 819:Generated_Source\PSoC5/HSYNC.c ****             return ((uint8)CY_GET_REG16(HSYNC_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/HSYNC.c ****         #else
 821:Generated_Source\PSoC5/HSYNC.c ****             return (CY_GET_REG8(HSYNC_COMPARE1_LSB_PTR));
 354              		.loc 1 821 0
 355 0000 014B     		ldr	r3, .L38
 356 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/HSYNC.c ****         #endif /* (HSYNC_UsingFixedFunction) */
 823:Generated_Source\PSoC5/HSYNC.c ****     }
 357              		.loc 1 823 0
 358 0004 7047     		bx	lr
 359              	.L39:
 360 0006 00BF     		.align	2
 361              	.L38:
 362 0008 2F640040 		.word	1073767471
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 22


 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	HSYNC_ReadCompare, .-HSYNC_ReadCompare
 366              		.section	.text.HSYNC_ReadPeriod,"ax",%progbits
 367              		.align	2
 368              		.global	HSYNC_ReadPeriod
 369              		.thumb
 370              		.thumb_func
 371              		.type	HSYNC_ReadPeriod, %function
 372              	HSYNC_ReadPeriod:
 373              	.LFB12:
 824:Generated_Source\PSoC5/HSYNC.c **** 
 825:Generated_Source\PSoC5/HSYNC.c **** #else
 826:Generated_Source\PSoC5/HSYNC.c **** 
 827:Generated_Source\PSoC5/HSYNC.c **** 
 828:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadCompare1
 830:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/HSYNC.c ****     *
 832:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 833:Generated_Source\PSoC5/HSYNC.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/HSYNC.c ****     *
 835:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 836:Generated_Source\PSoC5/HSYNC.c ****     *  None
 837:Generated_Source\PSoC5/HSYNC.c ****     *
 838:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 839:Generated_Source\PSoC5/HSYNC.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/HSYNC.c ****     *
 841:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadCompare1(void) 
 843:Generated_Source\PSoC5/HSYNC.c ****     {
 844:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/HSYNC.c ****     }
 846:Generated_Source\PSoC5/HSYNC.c **** 
 847:Generated_Source\PSoC5/HSYNC.c **** 
 848:Generated_Source\PSoC5/HSYNC.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/HSYNC.c ****     * Function Name: HSYNC_ReadCompare2
 850:Generated_Source\PSoC5/HSYNC.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/HSYNC.c ****     *
 852:Generated_Source\PSoC5/HSYNC.c ****     * Summary:
 853:Generated_Source\PSoC5/HSYNC.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/HSYNC.c ****     *
 855:Generated_Source\PSoC5/HSYNC.c ****     * Parameters:
 856:Generated_Source\PSoC5/HSYNC.c ****     *  None
 857:Generated_Source\PSoC5/HSYNC.c ****     *
 858:Generated_Source\PSoC5/HSYNC.c ****     * Return:
 859:Generated_Source\PSoC5/HSYNC.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/HSYNC.c ****     *
 861:Generated_Source\PSoC5/HSYNC.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/HSYNC.c ****     uint8 HSYNC_ReadCompare2(void) 
 863:Generated_Source\PSoC5/HSYNC.c ****     {
 864:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/HSYNC.c ****     }
 866:Generated_Source\PSoC5/HSYNC.c **** 
 867:Generated_Source\PSoC5/HSYNC.c **** #endif /* (HSYNC_UseOneCompareMode) */
 868:Generated_Source\PSoC5/HSYNC.c **** 
 869:Generated_Source\PSoC5/HSYNC.c **** 
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 23


 870:Generated_Source\PSoC5/HSYNC.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/HSYNC.c **** * Function Name: HSYNC_ReadPeriod
 872:Generated_Source\PSoC5/HSYNC.c **** ********************************************************************************
 873:Generated_Source\PSoC5/HSYNC.c **** *
 874:Generated_Source\PSoC5/HSYNC.c **** * Summary:
 875:Generated_Source\PSoC5/HSYNC.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/HSYNC.c **** *
 877:Generated_Source\PSoC5/HSYNC.c **** * Parameters:
 878:Generated_Source\PSoC5/HSYNC.c **** *  None
 879:Generated_Source\PSoC5/HSYNC.c **** *
 880:Generated_Source\PSoC5/HSYNC.c **** * Return:
 881:Generated_Source\PSoC5/HSYNC.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/HSYNC.c **** *
 883:Generated_Source\PSoC5/HSYNC.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/HSYNC.c **** uint8 HSYNC_ReadPeriod(void) 
 885:Generated_Source\PSoC5/HSYNC.c **** {
 374              		.loc 1 885 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 886:Generated_Source\PSoC5/HSYNC.c ****     #if(HSYNC_UsingFixedFunction)
 887:Generated_Source\PSoC5/HSYNC.c ****         return ((uint8)CY_GET_REG16(HSYNC_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/HSYNC.c ****     #else
 889:Generated_Source\PSoC5/HSYNC.c ****         return (CY_GET_REG8(HSYNC_PERIOD_LSB_PTR));
 379              		.loc 1 889 0
 380 0000 014B     		ldr	r3, .L41
 381 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/HSYNC.c ****     #endif /* (HSYNC_UsingFixedFunction) */
 891:Generated_Source\PSoC5/HSYNC.c **** }
 382              		.loc 1 891 0
 383 0004 7047     		bx	lr
 384              	.L42:
 385 0006 00BF     		.align	2
 386              	.L41:
 387 0008 4F640040 		.word	1073767503
 388              		.cfi_endproc
 389              	.LFE12:
 390              		.size	HSYNC_ReadPeriod, .-HSYNC_ReadPeriod
 391              		.global	HSYNC_initVar
 392              		.bss
 393              		.set	.LANCHOR0,. + 0
 394              		.type	HSYNC_initVar, %object
 395              		.size	HSYNC_initVar, 1
 396              	HSYNC_initVar:
 397 0000 00       		.space	1
 398              		.text
 399              	.Letext0:
 400              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 72020000 		.4byte	0x272
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c A3000000 		.4byte	.LASF34
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 24


 409 0010 0C       		.byte	0xc
 410 0011 68000000 		.4byte	.LASF35
 411 0015 B6010000 		.4byte	.LASF36
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 D5020000 		.4byte	.LASF0
 419 002c 02       		.uleb128 0x2
 420 002d 01       		.byte	0x1
 421 002e 08       		.byte	0x8
 422 002f 95000000 		.4byte	.LASF1
 423 0033 02       		.uleb128 0x2
 424 0034 02       		.byte	0x2
 425 0035 05       		.byte	0x5
 426 0036 9D020000 		.4byte	.LASF2
 427 003a 02       		.uleb128 0x2
 428 003b 02       		.byte	0x2
 429 003c 07       		.byte	0x7
 430 003d 34000000 		.4byte	.LASF3
 431 0041 02       		.uleb128 0x2
 432 0042 04       		.byte	0x4
 433 0043 05       		.byte	0x5
 434 0044 BA020000 		.4byte	.LASF4
 435 0048 02       		.uleb128 0x2
 436 0049 04       		.byte	0x4
 437 004a 07       		.byte	0x7
 438 004b 97010000 		.4byte	.LASF5
 439 004f 02       		.uleb128 0x2
 440 0050 08       		.byte	0x8
 441 0051 05       		.byte	0x5
 442 0052 7E020000 		.4byte	.LASF6
 443 0056 02       		.uleb128 0x2
 444 0057 08       		.byte	0x8
 445 0058 07       		.byte	0x7
 446 0059 20020000 		.4byte	.LASF7
 447 005d 03       		.uleb128 0x3
 448 005e 04       		.byte	0x4
 449 005f 05       		.byte	0x5
 450 0060 696E7400 		.ascii	"int\000"
 451 0064 02       		.uleb128 0x2
 452 0065 04       		.byte	0x4
 453 0066 07       		.byte	0x7
 454 0067 A9010000 		.4byte	.LASF8
 455 006b 04       		.uleb128 0x4
 456 006c 48010000 		.4byte	.LASF12
 457 0070 02       		.byte	0x2
 458 0071 E401     		.2byte	0x1e4
 459 0073 2C000000 		.4byte	0x2c
 460 0077 02       		.uleb128 0x2
 461 0078 04       		.byte	0x4
 462 0079 04       		.byte	0x4
 463 007a 87000000 		.4byte	.LASF9
 464 007e 02       		.uleb128 0x2
 465 007f 08       		.byte	0x8
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 25


 466 0080 04       		.byte	0x4
 467 0081 61000000 		.4byte	.LASF10
 468 0085 02       		.uleb128 0x2
 469 0086 01       		.byte	0x1
 470 0087 08       		.byte	0x8
 471 0088 8C020000 		.4byte	.LASF11
 472 008c 04       		.uleb128 0x4
 473 008d 31010000 		.4byte	.LASF13
 474 0091 02       		.byte	0x2
 475 0092 8E02     		.2byte	0x28e
 476 0094 98000000 		.4byte	0x98
 477 0098 05       		.uleb128 0x5
 478 0099 6B000000 		.4byte	0x6b
 479 009d 02       		.uleb128 0x2
 480 009e 08       		.byte	0x8
 481 009f 04       		.byte	0x4
 482 00a0 57020000 		.4byte	.LASF14
 483 00a4 02       		.uleb128 0x2
 484 00a5 04       		.byte	0x4
 485 00a6 07       		.byte	0x7
 486 00a7 63020000 		.4byte	.LASF15
 487 00ab 06       		.uleb128 0x6
 488 00ac 27000000 		.4byte	.LASF16
 489 00b0 01       		.byte	0x1
 490 00b1 C7       		.byte	0xc7
 491 00b2 00000000 		.4byte	.LFB2
 492 00b6 10000000 		.4byte	.LFE2-.LFB2
 493 00ba 01       		.uleb128 0x1
 494 00bb 9C       		.byte	0x9c
 495 00bc 06       		.uleb128 0x6
 496 00bd 79010000 		.4byte	.LASF17
 497 00c1 01       		.byte	0x1
 498 00c2 E9       		.byte	0xe9
 499 00c3 00000000 		.4byte	.LFB3
 500 00c7 10000000 		.4byte	.LFE3-.LFB3
 501 00cb 01       		.uleb128 0x1
 502 00cc 9C       		.byte	0x9c
 503 00cd 07       		.uleb128 0x7
 504 00ce A7020000 		.4byte	.LASF18
 505 00d2 01       		.byte	0x1
 506 00d3 9301     		.2byte	0x193
 507 00d5 00000000 		.4byte	.LFB4
 508 00d9 0C000000 		.4byte	.LFE4-.LFB4
 509 00dd 01       		.uleb128 0x1
 510 00de 9C       		.byte	0x9c
 511 00df F2000000 		.4byte	0xf2
 512 00e3 08       		.uleb128 0x8
 513 00e4 8D000000 		.4byte	.LASF20
 514 00e8 01       		.byte	0x1
 515 00e9 9301     		.2byte	0x193
 516 00eb 6B000000 		.4byte	0x6b
 517 00ef 01       		.uleb128 0x1
 518 00f0 50       		.byte	0x50
 519 00f1 00       		.byte	0
 520 00f2 09       		.uleb128 0x9
 521 00f3 6C020000 		.4byte	.LASF30
 522 00f7 01       		.byte	0x1
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 26


 523 00f8 A901     		.2byte	0x1a9
 524 00fa 6B000000 		.4byte	0x6b
 525 00fe 00000000 		.4byte	.LFB5
 526 0102 14000000 		.4byte	.LFE5-.LFB5
 527 0106 01       		.uleb128 0x1
 528 0107 9C       		.byte	0x9c
 529 0108 07       		.uleb128 0x7
 530 0109 C3020000 		.4byte	.LASF19
 531 010d 01       		.byte	0x1
 532 010e E201     		.2byte	0x1e2
 533 0110 00000000 		.4byte	.LFB6
 534 0114 0C000000 		.4byte	.LFE6-.LFB6
 535 0118 01       		.uleb128 0x1
 536 0119 9C       		.byte	0x9c
 537 011a 2D010000 		.4byte	0x12d
 538 011e 08       		.uleb128 0x8
 539 011f 20000000 		.4byte	.LASF21
 540 0123 01       		.byte	0x1
 541 0124 E201     		.2byte	0x1e2
 542 0126 6B000000 		.4byte	0x6b
 543 012a 01       		.uleb128 0x1
 544 012b 50       		.byte	0x50
 545 012c 00       		.byte	0
 546 012d 07       		.uleb128 0x7
 547 012e 84010000 		.4byte	.LASF22
 548 0132 01       		.byte	0x1
 549 0133 0402     		.2byte	0x204
 550 0135 00000000 		.4byte	.LFB7
 551 0139 0C000000 		.4byte	.LFE7-.LFB7
 552 013d 01       		.uleb128 0x1
 553 013e 9C       		.byte	0x9c
 554 013f 52010000 		.4byte	0x152
 555 0143 08       		.uleb128 0x8
 556 0144 E1020000 		.4byte	.LASF23
 557 0148 01       		.byte	0x1
 558 0149 0402     		.2byte	0x204
 559 014b 6B000000 		.4byte	0x6b
 560 014f 01       		.uleb128 0x1
 561 0150 50       		.byte	0x50
 562 0151 00       		.byte	0
 563 0152 0A       		.uleb128 0xa
 564 0153 15000000 		.4byte	.LASF24
 565 0157 01       		.byte	0x1
 566 0158 54       		.byte	0x54
 567 0159 00000000 		.4byte	.LFB1
 568 015d 34000000 		.4byte	.LFE1-.LFB1
 569 0161 01       		.uleb128 0x1
 570 0162 9C       		.byte	0x9c
 571 0163 AC010000 		.4byte	0x1ac
 572 0167 0B       		.uleb128 0xb
 573 0168 52020000 		.4byte	.LASF26
 574 016c 01       		.byte	0x1
 575 016d 57       		.byte	0x57
 576 016e 6B000000 		.4byte	0x6b
 577 0172 00000000 		.4byte	.LLST0
 578 0176 0C       		.uleb128 0xc
 579 0177 20000000 		.4byte	.LVL5
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 27


 580 017b CD000000 		.4byte	0xcd
 581 017f 89010000 		.4byte	0x189
 582 0183 0D       		.uleb128 0xd
 583 0184 01       		.uleb128 0x1
 584 0185 50       		.byte	0x50
 585 0186 01       		.uleb128 0x1
 586 0187 41       		.byte	0x41
 587 0188 00       		.byte	0
 588 0189 0C       		.uleb128 0xc
 589 018a 26000000 		.4byte	.LVL6
 590 018e 08010000 		.4byte	0x108
 591 0192 9C010000 		.4byte	0x19c
 592 0196 0D       		.uleb128 0xd
 593 0197 01       		.uleb128 0x1
 594 0198 50       		.byte	0x50
 595 0199 01       		.uleb128 0x1
 596 019a 41       		.byte	0x41
 597 019b 00       		.byte	0
 598 019c 0E       		.uleb128 0xe
 599 019d 2C000000 		.4byte	.LVL7
 600 01a1 2D010000 		.4byte	0x12d
 601 01a5 0D       		.uleb128 0xd
 602 01a6 01       		.uleb128 0x1
 603 01a7 50       		.byte	0x50
 604 01a8 01       		.uleb128 0x1
 605 01a9 41       		.byte	0x41
 606 01aa 00       		.byte	0
 607 01ab 00       		.byte	0
 608 01ac 0A       		.uleb128 0xa
 609 01ad 91020000 		.4byte	.LASF25
 610 01b1 01       		.byte	0x1
 611 01b2 37       		.byte	0x37
 612 01b3 00000000 		.4byte	.LFB0
 613 01b7 1C000000 		.4byte	.LFE0-.LFB0
 614 01bb 01       		.uleb128 0x1
 615 01bc 9C       		.byte	0x9c
 616 01bd D4010000 		.4byte	0x1d4
 617 01c1 0F       		.uleb128 0xf
 618 01c2 0C000000 		.4byte	.LVL8
 619 01c6 52010000 		.4byte	0x152
 620 01ca 0F       		.uleb128 0xf
 621 01cb 16000000 		.4byte	.LVL9
 622 01cf AB000000 		.4byte	0xab
 623 01d3 00       		.byte	0
 624 01d4 10       		.uleb128 0x10
 625 01d5 47000000 		.4byte	.LASF37
 626 01d9 01       		.byte	0x1
 627 01da E102     		.2byte	0x2e1
 628 01dc 6B000000 		.4byte	0x6b
 629 01e0 00000000 		.4byte	.LFB8
 630 01e4 0C000000 		.4byte	.LFE8-.LFB8
 631 01e8 01       		.uleb128 0x1
 632 01e9 9C       		.byte	0x9c
 633 01ea FD010000 		.4byte	0x1fd
 634 01ee 11       		.uleb128 0x11
 635 01ef 0E000000 		.4byte	.LASF27
 636 01f3 01       		.byte	0x1
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 28


 637 01f4 E302     		.2byte	0x2e3
 638 01f6 6B000000 		.4byte	0x6b
 639 01fa 01       		.uleb128 0x1
 640 01fb 50       		.byte	0x50
 641 01fc 00       		.byte	0
 642 01fd 07       		.uleb128 0x7
 643 01fe 37020000 		.4byte	.LASF28
 644 0202 01       		.byte	0x1
 645 0203 FD02     		.2byte	0x2fd
 646 0205 00000000 		.4byte	.LFB9
 647 0209 0C000000 		.4byte	.LFE9-.LFB9
 648 020d 01       		.uleb128 0x1
 649 020e 9C       		.byte	0x9c
 650 020f 22020000 		.4byte	0x222
 651 0213 08       		.uleb128 0x8
 652 0214 4E010000 		.4byte	.LASF29
 653 0218 01       		.byte	0x1
 654 0219 FD02     		.2byte	0x2fd
 655 021b 6B000000 		.4byte	0x6b
 656 021f 01       		.uleb128 0x1
 657 0220 50       		.byte	0x50
 658 0221 00       		.byte	0
 659 0222 09       		.uleb128 0x9
 660 0223 67010000 		.4byte	.LASF31
 661 0227 01       		.byte	0x1
 662 0228 1603     		.2byte	0x316
 663 022a 6B000000 		.4byte	0x6b
 664 022e 00000000 		.4byte	.LFB10
 665 0232 0C000000 		.4byte	.LFE10-.LFB10
 666 0236 01       		.uleb128 0x1
 667 0237 9C       		.byte	0x9c
 668 0238 09       		.uleb128 0x9
 669 0239 36010000 		.4byte	.LASF32
 670 023d 01       		.byte	0x1
 671 023e 3003     		.2byte	0x330
 672 0240 6B000000 		.4byte	0x6b
 673 0244 00000000 		.4byte	.LFB11
 674 0248 0C000000 		.4byte	.LFE11-.LFB11
 675 024c 01       		.uleb128 0x1
 676 024d 9C       		.byte	0x9c
 677 024e 09       		.uleb128 0x9
 678 024f 56010000 		.4byte	.LASF33
 679 0253 01       		.byte	0x1
 680 0254 7403     		.2byte	0x374
 681 0256 6B000000 		.4byte	0x6b
 682 025a 00000000 		.4byte	.LFB12
 683 025e 0C000000 		.4byte	.LFE12-.LFB12
 684 0262 01       		.uleb128 0x1
 685 0263 9C       		.byte	0x9c
 686 0264 12       		.uleb128 0x12
 687 0265 00000000 		.4byte	.LASF38
 688 0269 01       		.byte	0x1
 689 026a 20       		.byte	0x20
 690 026b 6B000000 		.4byte	0x6b
 691 026f 05       		.uleb128 0x5
 692 0270 03       		.byte	0x3
 693 0271 00000000 		.4byte	HSYNC_initVar
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 29


 694 0275 00       		.byte	0
 695              		.section	.debug_abbrev,"",%progbits
 696              	.Ldebug_abbrev0:
 697 0000 01       		.uleb128 0x1
 698 0001 11       		.uleb128 0x11
 699 0002 01       		.byte	0x1
 700 0003 25       		.uleb128 0x25
 701 0004 0E       		.uleb128 0xe
 702 0005 13       		.uleb128 0x13
 703 0006 0B       		.uleb128 0xb
 704 0007 03       		.uleb128 0x3
 705 0008 0E       		.uleb128 0xe
 706 0009 1B       		.uleb128 0x1b
 707 000a 0E       		.uleb128 0xe
 708 000b 55       		.uleb128 0x55
 709 000c 17       		.uleb128 0x17
 710 000d 11       		.uleb128 0x11
 711 000e 01       		.uleb128 0x1
 712 000f 10       		.uleb128 0x10
 713 0010 17       		.uleb128 0x17
 714 0011 00       		.byte	0
 715 0012 00       		.byte	0
 716 0013 02       		.uleb128 0x2
 717 0014 24       		.uleb128 0x24
 718 0015 00       		.byte	0
 719 0016 0B       		.uleb128 0xb
 720 0017 0B       		.uleb128 0xb
 721 0018 3E       		.uleb128 0x3e
 722 0019 0B       		.uleb128 0xb
 723 001a 03       		.uleb128 0x3
 724 001b 0E       		.uleb128 0xe
 725 001c 00       		.byte	0
 726 001d 00       		.byte	0
 727 001e 03       		.uleb128 0x3
 728 001f 24       		.uleb128 0x24
 729 0020 00       		.byte	0
 730 0021 0B       		.uleb128 0xb
 731 0022 0B       		.uleb128 0xb
 732 0023 3E       		.uleb128 0x3e
 733 0024 0B       		.uleb128 0xb
 734 0025 03       		.uleb128 0x3
 735 0026 08       		.uleb128 0x8
 736 0027 00       		.byte	0
 737 0028 00       		.byte	0
 738 0029 04       		.uleb128 0x4
 739 002a 16       		.uleb128 0x16
 740 002b 00       		.byte	0
 741 002c 03       		.uleb128 0x3
 742 002d 0E       		.uleb128 0xe
 743 002e 3A       		.uleb128 0x3a
 744 002f 0B       		.uleb128 0xb
 745 0030 3B       		.uleb128 0x3b
 746 0031 05       		.uleb128 0x5
 747 0032 49       		.uleb128 0x49
 748 0033 13       		.uleb128 0x13
 749 0034 00       		.byte	0
 750 0035 00       		.byte	0
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 30


 751 0036 05       		.uleb128 0x5
 752 0037 35       		.uleb128 0x35
 753 0038 00       		.byte	0
 754 0039 49       		.uleb128 0x49
 755 003a 13       		.uleb128 0x13
 756 003b 00       		.byte	0
 757 003c 00       		.byte	0
 758 003d 06       		.uleb128 0x6
 759 003e 2E       		.uleb128 0x2e
 760 003f 00       		.byte	0
 761 0040 3F       		.uleb128 0x3f
 762 0041 19       		.uleb128 0x19
 763 0042 03       		.uleb128 0x3
 764 0043 0E       		.uleb128 0xe
 765 0044 3A       		.uleb128 0x3a
 766 0045 0B       		.uleb128 0xb
 767 0046 3B       		.uleb128 0x3b
 768 0047 0B       		.uleb128 0xb
 769 0048 27       		.uleb128 0x27
 770 0049 19       		.uleb128 0x19
 771 004a 11       		.uleb128 0x11
 772 004b 01       		.uleb128 0x1
 773 004c 12       		.uleb128 0x12
 774 004d 06       		.uleb128 0x6
 775 004e 40       		.uleb128 0x40
 776 004f 18       		.uleb128 0x18
 777 0050 9742     		.uleb128 0x2117
 778 0052 19       		.uleb128 0x19
 779 0053 00       		.byte	0
 780 0054 00       		.byte	0
 781 0055 07       		.uleb128 0x7
 782 0056 2E       		.uleb128 0x2e
 783 0057 01       		.byte	0x1
 784 0058 3F       		.uleb128 0x3f
 785 0059 19       		.uleb128 0x19
 786 005a 03       		.uleb128 0x3
 787 005b 0E       		.uleb128 0xe
 788 005c 3A       		.uleb128 0x3a
 789 005d 0B       		.uleb128 0xb
 790 005e 3B       		.uleb128 0x3b
 791 005f 05       		.uleb128 0x5
 792 0060 27       		.uleb128 0x27
 793 0061 19       		.uleb128 0x19
 794 0062 11       		.uleb128 0x11
 795 0063 01       		.uleb128 0x1
 796 0064 12       		.uleb128 0x12
 797 0065 06       		.uleb128 0x6
 798 0066 40       		.uleb128 0x40
 799 0067 18       		.uleb128 0x18
 800 0068 9742     		.uleb128 0x2117
 801 006a 19       		.uleb128 0x19
 802 006b 01       		.uleb128 0x1
 803 006c 13       		.uleb128 0x13
 804 006d 00       		.byte	0
 805 006e 00       		.byte	0
 806 006f 08       		.uleb128 0x8
 807 0070 05       		.uleb128 0x5
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 31


 808 0071 00       		.byte	0
 809 0072 03       		.uleb128 0x3
 810 0073 0E       		.uleb128 0xe
 811 0074 3A       		.uleb128 0x3a
 812 0075 0B       		.uleb128 0xb
 813 0076 3B       		.uleb128 0x3b
 814 0077 05       		.uleb128 0x5
 815 0078 49       		.uleb128 0x49
 816 0079 13       		.uleb128 0x13
 817 007a 02       		.uleb128 0x2
 818 007b 18       		.uleb128 0x18
 819 007c 00       		.byte	0
 820 007d 00       		.byte	0
 821 007e 09       		.uleb128 0x9
 822 007f 2E       		.uleb128 0x2e
 823 0080 00       		.byte	0
 824 0081 3F       		.uleb128 0x3f
 825 0082 19       		.uleb128 0x19
 826 0083 03       		.uleb128 0x3
 827 0084 0E       		.uleb128 0xe
 828 0085 3A       		.uleb128 0x3a
 829 0086 0B       		.uleb128 0xb
 830 0087 3B       		.uleb128 0x3b
 831 0088 05       		.uleb128 0x5
 832 0089 27       		.uleb128 0x27
 833 008a 19       		.uleb128 0x19
 834 008b 49       		.uleb128 0x49
 835 008c 13       		.uleb128 0x13
 836 008d 11       		.uleb128 0x11
 837 008e 01       		.uleb128 0x1
 838 008f 12       		.uleb128 0x12
 839 0090 06       		.uleb128 0x6
 840 0091 40       		.uleb128 0x40
 841 0092 18       		.uleb128 0x18
 842 0093 9742     		.uleb128 0x2117
 843 0095 19       		.uleb128 0x19
 844 0096 00       		.byte	0
 845 0097 00       		.byte	0
 846 0098 0A       		.uleb128 0xa
 847 0099 2E       		.uleb128 0x2e
 848 009a 01       		.byte	0x1
 849 009b 3F       		.uleb128 0x3f
 850 009c 19       		.uleb128 0x19
 851 009d 03       		.uleb128 0x3
 852 009e 0E       		.uleb128 0xe
 853 009f 3A       		.uleb128 0x3a
 854 00a0 0B       		.uleb128 0xb
 855 00a1 3B       		.uleb128 0x3b
 856 00a2 0B       		.uleb128 0xb
 857 00a3 27       		.uleb128 0x27
 858 00a4 19       		.uleb128 0x19
 859 00a5 11       		.uleb128 0x11
 860 00a6 01       		.uleb128 0x1
 861 00a7 12       		.uleb128 0x12
 862 00a8 06       		.uleb128 0x6
 863 00a9 40       		.uleb128 0x40
 864 00aa 18       		.uleb128 0x18
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 32


 865 00ab 9742     		.uleb128 0x2117
 866 00ad 19       		.uleb128 0x19
 867 00ae 01       		.uleb128 0x1
 868 00af 13       		.uleb128 0x13
 869 00b0 00       		.byte	0
 870 00b1 00       		.byte	0
 871 00b2 0B       		.uleb128 0xb
 872 00b3 34       		.uleb128 0x34
 873 00b4 00       		.byte	0
 874 00b5 03       		.uleb128 0x3
 875 00b6 0E       		.uleb128 0xe
 876 00b7 3A       		.uleb128 0x3a
 877 00b8 0B       		.uleb128 0xb
 878 00b9 3B       		.uleb128 0x3b
 879 00ba 0B       		.uleb128 0xb
 880 00bb 49       		.uleb128 0x49
 881 00bc 13       		.uleb128 0x13
 882 00bd 02       		.uleb128 0x2
 883 00be 17       		.uleb128 0x17
 884 00bf 00       		.byte	0
 885 00c0 00       		.byte	0
 886 00c1 0C       		.uleb128 0xc
 887 00c2 898201   		.uleb128 0x4109
 888 00c5 01       		.byte	0x1
 889 00c6 11       		.uleb128 0x11
 890 00c7 01       		.uleb128 0x1
 891 00c8 31       		.uleb128 0x31
 892 00c9 13       		.uleb128 0x13
 893 00ca 01       		.uleb128 0x1
 894 00cb 13       		.uleb128 0x13
 895 00cc 00       		.byte	0
 896 00cd 00       		.byte	0
 897 00ce 0D       		.uleb128 0xd
 898 00cf 8A8201   		.uleb128 0x410a
 899 00d2 00       		.byte	0
 900 00d3 02       		.uleb128 0x2
 901 00d4 18       		.uleb128 0x18
 902 00d5 9142     		.uleb128 0x2111
 903 00d7 18       		.uleb128 0x18
 904 00d8 00       		.byte	0
 905 00d9 00       		.byte	0
 906 00da 0E       		.uleb128 0xe
 907 00db 898201   		.uleb128 0x4109
 908 00de 01       		.byte	0x1
 909 00df 11       		.uleb128 0x11
 910 00e0 01       		.uleb128 0x1
 911 00e1 31       		.uleb128 0x31
 912 00e2 13       		.uleb128 0x13
 913 00e3 00       		.byte	0
 914 00e4 00       		.byte	0
 915 00e5 0F       		.uleb128 0xf
 916 00e6 898201   		.uleb128 0x4109
 917 00e9 00       		.byte	0
 918 00ea 11       		.uleb128 0x11
 919 00eb 01       		.uleb128 0x1
 920 00ec 31       		.uleb128 0x31
 921 00ed 13       		.uleb128 0x13
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 33


 922 00ee 00       		.byte	0
 923 00ef 00       		.byte	0
 924 00f0 10       		.uleb128 0x10
 925 00f1 2E       		.uleb128 0x2e
 926 00f2 01       		.byte	0x1
 927 00f3 3F       		.uleb128 0x3f
 928 00f4 19       		.uleb128 0x19
 929 00f5 03       		.uleb128 0x3
 930 00f6 0E       		.uleb128 0xe
 931 00f7 3A       		.uleb128 0x3a
 932 00f8 0B       		.uleb128 0xb
 933 00f9 3B       		.uleb128 0x3b
 934 00fa 05       		.uleb128 0x5
 935 00fb 27       		.uleb128 0x27
 936 00fc 19       		.uleb128 0x19
 937 00fd 49       		.uleb128 0x49
 938 00fe 13       		.uleb128 0x13
 939 00ff 11       		.uleb128 0x11
 940 0100 01       		.uleb128 0x1
 941 0101 12       		.uleb128 0x12
 942 0102 06       		.uleb128 0x6
 943 0103 40       		.uleb128 0x40
 944 0104 18       		.uleb128 0x18
 945 0105 9742     		.uleb128 0x2117
 946 0107 19       		.uleb128 0x19
 947 0108 01       		.uleb128 0x1
 948 0109 13       		.uleb128 0x13
 949 010a 00       		.byte	0
 950 010b 00       		.byte	0
 951 010c 11       		.uleb128 0x11
 952 010d 34       		.uleb128 0x34
 953 010e 00       		.byte	0
 954 010f 03       		.uleb128 0x3
 955 0110 0E       		.uleb128 0xe
 956 0111 3A       		.uleb128 0x3a
 957 0112 0B       		.uleb128 0xb
 958 0113 3B       		.uleb128 0x3b
 959 0114 05       		.uleb128 0x5
 960 0115 49       		.uleb128 0x49
 961 0116 13       		.uleb128 0x13
 962 0117 02       		.uleb128 0x2
 963 0118 18       		.uleb128 0x18
 964 0119 00       		.byte	0
 965 011a 00       		.byte	0
 966 011b 12       		.uleb128 0x12
 967 011c 34       		.uleb128 0x34
 968 011d 00       		.byte	0
 969 011e 03       		.uleb128 0x3
 970 011f 0E       		.uleb128 0xe
 971 0120 3A       		.uleb128 0x3a
 972 0121 0B       		.uleb128 0xb
 973 0122 3B       		.uleb128 0x3b
 974 0123 0B       		.uleb128 0xb
 975 0124 49       		.uleb128 0x49
 976 0125 13       		.uleb128 0x13
 977 0126 3F       		.uleb128 0x3f
 978 0127 19       		.uleb128 0x19
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 34


 979 0128 02       		.uleb128 0x2
 980 0129 18       		.uleb128 0x18
 981 012a 00       		.byte	0
 982 012b 00       		.byte	0
 983 012c 00       		.byte	0
 984              		.section	.debug_loc,"",%progbits
 985              	.Ldebug_loc0:
 986              	.LLST0:
 987 0000 0A000000 		.4byte	.LVL3
 988 0004 0E000000 		.4byte	.LVL4
 989 0008 0100     		.2byte	0x1
 990 000a 53       		.byte	0x53
 991 000b 00000000 		.4byte	0
 992 000f 00000000 		.4byte	0
 993              		.section	.debug_aranges,"",%progbits
 994 0000 7C000000 		.4byte	0x7c
 995 0004 0200     		.2byte	0x2
 996 0006 00000000 		.4byte	.Ldebug_info0
 997 000a 04       		.byte	0x4
 998 000b 00       		.byte	0
 999 000c 0000     		.2byte	0
 1000 000e 0000     		.2byte	0
 1001 0010 00000000 		.4byte	.LFB2
 1002 0014 10000000 		.4byte	.LFE2-.LFB2
 1003 0018 00000000 		.4byte	.LFB3
 1004 001c 10000000 		.4byte	.LFE3-.LFB3
 1005 0020 00000000 		.4byte	.LFB4
 1006 0024 0C000000 		.4byte	.LFE4-.LFB4
 1007 0028 00000000 		.4byte	.LFB5
 1008 002c 14000000 		.4byte	.LFE5-.LFB5
 1009 0030 00000000 		.4byte	.LFB6
 1010 0034 0C000000 		.4byte	.LFE6-.LFB6
 1011 0038 00000000 		.4byte	.LFB7
 1012 003c 0C000000 		.4byte	.LFE7-.LFB7
 1013 0040 00000000 		.4byte	.LFB1
 1014 0044 34000000 		.4byte	.LFE1-.LFB1
 1015 0048 00000000 		.4byte	.LFB0
 1016 004c 1C000000 		.4byte	.LFE0-.LFB0
 1017 0050 00000000 		.4byte	.LFB8
 1018 0054 0C000000 		.4byte	.LFE8-.LFB8
 1019 0058 00000000 		.4byte	.LFB9
 1020 005c 0C000000 		.4byte	.LFE9-.LFB9
 1021 0060 00000000 		.4byte	.LFB10
 1022 0064 0C000000 		.4byte	.LFE10-.LFB10
 1023 0068 00000000 		.4byte	.LFB11
 1024 006c 0C000000 		.4byte	.LFE11-.LFB11
 1025 0070 00000000 		.4byte	.LFB12
 1026 0074 0C000000 		.4byte	.LFE12-.LFB12
 1027 0078 00000000 		.4byte	0
 1028 007c 00000000 		.4byte	0
 1029              		.section	.debug_ranges,"",%progbits
 1030              	.Ldebug_ranges0:
 1031 0000 00000000 		.4byte	.LFB2
 1032 0004 10000000 		.4byte	.LFE2
 1033 0008 00000000 		.4byte	.LFB3
 1034 000c 10000000 		.4byte	.LFE3
 1035 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 35


 1036 0014 0C000000 		.4byte	.LFE4
 1037 0018 00000000 		.4byte	.LFB5
 1038 001c 14000000 		.4byte	.LFE5
 1039 0020 00000000 		.4byte	.LFB6
 1040 0024 0C000000 		.4byte	.LFE6
 1041 0028 00000000 		.4byte	.LFB7
 1042 002c 0C000000 		.4byte	.LFE7
 1043 0030 00000000 		.4byte	.LFB1
 1044 0034 34000000 		.4byte	.LFE1
 1045 0038 00000000 		.4byte	.LFB0
 1046 003c 1C000000 		.4byte	.LFE0
 1047 0040 00000000 		.4byte	.LFB8
 1048 0044 0C000000 		.4byte	.LFE8
 1049 0048 00000000 		.4byte	.LFB9
 1050 004c 0C000000 		.4byte	.LFE9
 1051 0050 00000000 		.4byte	.LFB10
 1052 0054 0C000000 		.4byte	.LFE10
 1053 0058 00000000 		.4byte	.LFB11
 1054 005c 0C000000 		.4byte	.LFE11
 1055 0060 00000000 		.4byte	.LFB12
 1056 0064 0C000000 		.4byte	.LFE12
 1057 0068 00000000 		.4byte	0
 1058 006c 00000000 		.4byte	0
 1059              		.section	.debug_line,"",%progbits
 1060              	.Ldebug_line0:
 1061 0000 36010000 		.section	.debug_str,"MS",%progbits,1
 1061      02004200 
 1061      00000201 
 1061      FB0E0D00 
 1061      01010101 
 1062              	.LASF38:
 1063 0000 4853594E 		.ascii	"HSYNC_initVar\000"
 1063      435F696E 
 1063      69745661 
 1063      7200
 1064              	.LASF27:
 1065 000e 72657375 		.ascii	"result\000"
 1065      6C7400
 1066              	.LASF24:
 1067 0015 4853594E 		.ascii	"HSYNC_Init\000"
 1067      435F496E 
 1067      697400
 1068              	.LASF21:
 1069 0020 70657269 		.ascii	"period\000"
 1069      6F6400
 1070              	.LASF16:
 1071 0027 4853594E 		.ascii	"HSYNC_Enable\000"
 1071      435F456E 
 1071      61626C65 
 1071      00
 1072              	.LASF3:
 1073 0034 73686F72 		.ascii	"short unsigned int\000"
 1073      7420756E 
 1073      7369676E 
 1073      65642069 
 1073      6E7400
 1074              	.LASF37:
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 36


 1075 0047 4853594E 		.ascii	"HSYNC_ReadControlRegister\000"
 1075      435F5265 
 1075      6164436F 
 1075      6E74726F 
 1075      6C526567 
 1076              	.LASF10:
 1077 0061 646F7562 		.ascii	"double\000"
 1077      6C6500
 1078              	.LASF35:
 1079 0068 47656E65 		.ascii	"Generated_Source\\PSoC5\\HSYNC.c\000"
 1079      72617465 
 1079      645F536F 
 1079      75726365 
 1079      5C50536F 
 1080              	.LASF9:
 1081 0087 666C6F61 		.ascii	"float\000"
 1081      7400
 1082              	.LASF20:
 1083 008d 636F756E 		.ascii	"counter\000"
 1083      74657200 
 1084              	.LASF1:
 1085 0095 756E7369 		.ascii	"unsigned char\000"
 1085      676E6564 
 1085      20636861 
 1085      7200
 1086              	.LASF34:
 1087 00a3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1087      43313120 
 1087      352E342E 
 1087      31203230 
 1087      31363036 
 1088 00d6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1088      20726576 
 1088      6973696F 
 1088      6E203233 
 1088      37373135 
 1089 0109 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1089      66756E63 
 1089      74696F6E 
 1089      2D736563 
 1089      74696F6E 
 1090              	.LASF13:
 1091 0131 72656738 		.ascii	"reg8\000"
 1091      00
 1092              	.LASF32:
 1093 0136 4853594E 		.ascii	"HSYNC_ReadCompare\000"
 1093      435F5265 
 1093      6164436F 
 1093      6D706172 
 1093      6500
 1094              	.LASF12:
 1095 0148 75696E74 		.ascii	"uint8\000"
 1095      3800
 1096              	.LASF29:
 1097 014e 636F6E74 		.ascii	"control\000"
 1097      726F6C00 
 1098              	.LASF33:
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 37


 1099 0156 4853594E 		.ascii	"HSYNC_ReadPeriod\000"
 1099      435F5265 
 1099      61645065 
 1099      72696F64 
 1099      00
 1100              	.LASF31:
 1101 0167 4853594E 		.ascii	"HSYNC_ReadCapture\000"
 1101      435F5265 
 1101      61644361 
 1101      70747572 
 1101      6500
 1102              	.LASF17:
 1103 0179 4853594E 		.ascii	"HSYNC_Stop\000"
 1103      435F5374 
 1103      6F7000
 1104              	.LASF22:
 1105 0184 4853594E 		.ascii	"HSYNC_WriteCompare\000"
 1105      435F5772 
 1105      69746543 
 1105      6F6D7061 
 1105      726500
 1106              	.LASF5:
 1107 0197 6C6F6E67 		.ascii	"long unsigned int\000"
 1107      20756E73 
 1107      69676E65 
 1107      6420696E 
 1107      7400
 1108              	.LASF8:
 1109 01a9 756E7369 		.ascii	"unsigned int\000"
 1109      676E6564 
 1109      20696E74 
 1109      00
 1110              	.LASF36:
 1111 01b6 433A5C55 		.ascii	"C:\\Users\\info\\Desktop\\Spring 2019 Classes\\6.11"
 1111      73657273 
 1111      5C696E66 
 1111      6F5C4465 
 1111      736B746F 
 1112 01e4 355C362E 		.ascii	"5\\6.115-final\\PSoCCreator\\Final Project\\FinalEm"
 1112      3131352D 
 1112      66696E61 
 1112      6C5C5053 
 1112      6F434372 
 1113 0213 756C6174 		.ascii	"ulator.cydsn\000"
 1113      6F722E63 
 1113      7964736E 
 1113      00
 1114              	.LASF7:
 1115 0220 6C6F6E67 		.ascii	"long long unsigned int\000"
 1115      206C6F6E 
 1115      6720756E 
 1115      7369676E 
 1115      65642069 
 1116              	.LASF28:
 1117 0237 4853594E 		.ascii	"HSYNC_WriteControlRegister\000"
 1117      435F5772 
 1117      69746543 
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 38


 1117      6F6E7472 
 1117      6F6C5265 
 1118              	.LASF26:
 1119 0252 6374726C 		.ascii	"ctrl\000"
 1119      00
 1120              	.LASF14:
 1121 0257 6C6F6E67 		.ascii	"long double\000"
 1121      20646F75 
 1121      626C6500 
 1122              	.LASF15:
 1123 0263 73697A65 		.ascii	"sizetype\000"
 1123      74797065 
 1123      00
 1124              	.LASF30:
 1125 026c 4853594E 		.ascii	"HSYNC_ReadCounter\000"
 1125      435F5265 
 1125      6164436F 
 1125      756E7465 
 1125      7200
 1126              	.LASF6:
 1127 027e 6C6F6E67 		.ascii	"long long int\000"
 1127      206C6F6E 
 1127      6720696E 
 1127      7400
 1128              	.LASF11:
 1129 028c 63686172 		.ascii	"char\000"
 1129      00
 1130              	.LASF25:
 1131 0291 4853594E 		.ascii	"HSYNC_Start\000"
 1131      435F5374 
 1131      61727400 
 1132              	.LASF2:
 1133 029d 73686F72 		.ascii	"short int\000"
 1133      7420696E 
 1133      7400
 1134              	.LASF18:
 1135 02a7 4853594E 		.ascii	"HSYNC_WriteCounter\000"
 1135      435F5772 
 1135      69746543 
 1135      6F756E74 
 1135      657200
 1136              	.LASF4:
 1137 02ba 6C6F6E67 		.ascii	"long int\000"
 1137      20696E74 
 1137      00
 1138              	.LASF19:
 1139 02c3 4853594E 		.ascii	"HSYNC_WritePeriod\000"
 1139      435F5772 
 1139      69746550 
 1139      6572696F 
 1139      6400
 1140              	.LASF0:
 1141 02d5 7369676E 		.ascii	"signed char\000"
 1141      65642063 
 1141      68617200 
 1142              	.LASF23:
 1143 02e1 636F6D70 		.ascii	"compare\000"
ARM GAS  C:\Users\info\AppData\Local\Temp\ccasMHfB.s 			page 39


 1143      61726500 
 1144              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
